<?php

/**
 * This is the model base class for the table "district".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "District".
 *
 * Columns in table "district" available as properties of the model,
 * followed by relations of table "district" available as properties of the model.
 *
 * @property integer $id
 * @property string $code
 * @property string $ar_name
 * @property string $en_name
 * @property integer $governerate_id
 *
 * @property Governorate $governerate
 * @property Subdistrict[] $subdistricts
 */
abstract class BaseDistrict extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'district';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'District|Districts', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('code, ar_name, en_name', 'required'),
			array('governerate_id', 'numerical', 'integerOnly'=>true),
			array('code', 'length', 'max'=>10),
			array('ar_name, en_name', 'length', 'max'=>255),
			array('governerate_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, code, ar_name, en_name, governerate_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'governerate' => array(self::BELONGS_TO, 'Governorate', 'governerate_id'),
			'subdistricts' => array(self::HAS_MANY, 'Subdistrict', 'district_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'code' => Yii::t('app', 'Code'),
			'ar_name' => Yii::t('app', 'Ar Name'),
			'en_name' => Yii::t('app', 'En Name'),
			'governerate_id' => null,
			'governerate' => null,
			'subdistricts' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('ar_name', $this->ar_name, true);
		$criteria->compare('en_name', $this->en_name, true);
		$criteria->compare('governerate_id', $this->governerate_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}