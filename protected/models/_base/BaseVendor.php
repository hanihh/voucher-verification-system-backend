<?php

/**
 * This is the model base class for the table "vendor".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Vendor".
 *
 * Columns in table "vendor" available as properties of the model,
 * followed by relations of table "vendor" available as properties of the model.
 *
 * @property integer $id
 * @property string $en_name
 * @property string $ar_name
 * @property string $code
 * @property string $create_date
 * @property integer $status_id
 * @property integer $type_id
 * @property string $deleted_at
 *
 * @property VendorType $type
 * @property VendorStatus $status
 * @property VendorMobile[] $vendorMobiles
 * @property VendorNote[] $vendorNotes
 * @property Voucher[] $vouchers
 */
abstract class BaseVendor extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'vendor';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Vendor|Vendors', $n);
	}

	public static function representingColumn() {
		return 'code';
	}

	public function rules() {
		return array(
			array('code, create_date, status_id, type_id', 'required'),
			array('status_id, type_id', 'numerical', 'integerOnly'=>true),
			array('en_name, ar_name', 'length', 'max'=>255),
			array('code', 'length', 'max'=>10),
			array('deleted_at', 'safe'),
			array('en_name, ar_name, deleted_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, en_name, ar_name, code, create_date, status_id, type_id, deleted_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'type' => array(self::BELONGS_TO, 'VendorType', 'type_id'),
			'status' => array(self::BELONGS_TO, 'VendorStatus', 'status_id'),
			'vendorMobiles' => array(self::HAS_MANY, 'VendorMobile', 'vendor_id'),
			'vendorNotes' => array(self::HAS_MANY, 'VendorNote', 'vendor_id'),
			'vouchers' => array(self::HAS_MANY, 'Voucher', 'vendor_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'en_name' => Yii::t('app', 'En Name'),
			'ar_name' => Yii::t('app', 'Ar Name'),
			'code' => Yii::t('app', 'Code'),
			'create_date' => Yii::t('app', 'Create Date'),
			'status_id' => null,
			'type_id' => null,
			'deleted_at' => Yii::t('app', 'Deleted At'),
			'type' => null,
			'status' => null,
			'vendorMobiles' => null,
			'vendorNotes' => null,
			'vouchers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('en_name', $this->en_name, true);
		$criteria->compare('ar_name', $this->ar_name, true);
		$criteria->compare('code', $this->code, true);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('status_id', $this->status_id);
		$criteria->compare('type_id', $this->type_id);
		$criteria->compare('deleted_at', $this->deleted_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}